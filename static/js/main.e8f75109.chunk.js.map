{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","robot","SearchBox","onSearchChange","onChange","placeholder","type","Scroll","children","style","overflowY","border","height","ErrorBoundry","state","hasError","this","setState","props","React","Component","App","filteredRobots","bind","fetch","then","response","json","users","e","filter","toLocaleLowerCase","includes","target","value","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAaeA,EAXF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,gBACzD,gCACE,6BAAKL,IACL,4BAAIC,WCYGK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,GACX,OACE,cAAC,EAAD,CAEET,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,MACbC,GAAIO,EAAMP,IAHLO,EAAMP,UCKRQ,EAZG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,OACE,qBAAKR,UAAU,MAAf,SACE,uBACES,SAAUD,EACVR,UAAU,sDACVU,YAAY,gBACZC,KAAK,cCOEC,EAdA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,KCUQK,E,kDAlBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAU,GAHA,E,qDAOd,WACEC,KAAKC,SAAS,CAAEF,UAAU,M,oBAE5B,WACE,OAAIC,KAAKF,MAAMC,SACN,4DAEFC,KAAKE,MAAMV,a,GAfKW,IAAMC,WCqDlBC,G,6DA9Cb,aAAe,IAAD,8BACZ,gBAEKP,MAAQ,CACXf,OAAQ,GACRuB,eAAgB,IAElB,EAAKnB,eAAiB,EAAKA,eAAeoB,KAApB,gBAPV,E,qDAUd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKX,SAAS,CAAElB,OAAQ6B,EAAON,eAAgBM,S,4BAIrD,SAAeC,GACb,IAAMP,EAAiBN,KAAKF,MAAMf,OAAO+B,QAAO,SAAC7B,GAC/C,OAAOA,EAAMT,KACVuC,oBACAC,SAASH,EAAEI,OAAOC,MAAMH,wBAE7Bf,KAAKC,SAAS,CAAEK,eAAgBA,M,oBAElC,WACE,OAAiC,IAA7BN,KAAKF,MAAMf,OAAOoC,OACb,oBAAIxC,UAAU,KAAd,wBAGP,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWQ,eAAgBa,KAAKb,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUJ,OAAQiB,KAAKF,MAAMQ,4B,GAvCvBF,cCIHgB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e8f75109.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robo friend\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((robot) => {\r\n        return (\r\n          <Card\r\n            key={robot.id}\r\n            name={robot.name}\r\n            email={robot.email}\r\n            id={robot.id}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ onSearchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        onChange={onSearchChange}\r\n        className=\"ba b--green bg-lightest-blue pa3 mb2 db w-50 center\"\r\n        placeholder=\"search robots\"\r\n        type=\"search\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: 'scroll',\r\n        border: 'solid black 1px',\r\n        height: '800px',\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooooops. that is not good </h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\nimport 'tachyons';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      robots: [],\r\n      filteredRobots: [],\r\n    };\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        this.setState({ robots: users, filteredRobots: users });\r\n      });\r\n  }\r\n\r\n  onSearchChange(e) {\r\n    const filteredRobots = this.state.robots.filter((robot) => {\r\n      return robot.name\r\n        .toLocaleLowerCase()\r\n        .includes(e.target.value.toLocaleLowerCase());\r\n    });\r\n    this.setState({ filteredRobots: filteredRobots });\r\n  }\r\n  render() {\r\n    if (this.state.robots.length === 0) {\r\n      return <h1 className=\"tc\">Loading...</h1>;\r\n    }\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox onSearchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={this.state.filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}